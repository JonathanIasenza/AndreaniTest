{"ast":null,"code":"import React,{useContext}from\"react\";import Card from\"../CardModule/Card\";import BoardHeader from\"./BoardHeader\";import{Context}from\"../../context\";import\"../../styles/Main.css\";function Board(_ref){var id=_ref.id,className=_ref.className,cards=_ref.cards,type=_ref.type,canBeAdded=_ref.canBeAdded,boardName=_ref.boardName,color=_ref.color;var _useContext=useContext(Context),dispatch=_useContext.dispatch;var drop=function drop(e){e.preventDefault();var target=e.dataTransfer.getData(\"cardId\");var target_parsed=JSON.parse(target);if(!target_parsed)return;function isDifferMoreOne(board_type,card_type){var is_right_differ=true;var is_wrong_differ=false;if(board_type-card_type===1||board_type-card_type===-1)return is_right_differ;return is_wrong_differ;}if(type===target_parsed.type||isDifferMoreOne(type,target_parsed.type)){dispatch({type:\"UPDATE_CARDS\",payload:{board_old_id:target_parsed.board_id,card_id:target_parsed.id,card_type:type,board_new_id:id,card:{id:target_parsed.id,className:\"card\",draggable:\"true\",type:type,title:target_parsed.title,description:target_parsed.description}}});}};var dragOver=function dragOver(e){e.preventDefault();};return/*#__PURE__*/React.createElement(\"div\",{id:\"board\",className:\"boardwrapper\"},/*#__PURE__*/React.createElement(BoardHeader,{canBeAdded:canBeAdded,boardName:boardName,boardId:id,type:type,colorBg:color}),/*#__PURE__*/React.createElement(\"div\",{id:id,className:className,onDrop:drop,onDragOver:dragOver},cards&&cards.map(function(item){return/*#__PURE__*/React.createElement(Card,Object.assign({key:item.id},item,{boardId:id,board_name:boardName}));})));}export default Board;","map":{"version":3,"sources":["C:/Users/Buny/Desktop/testAndreani/src/components/BoardModule/Board.js"],"names":["React","useContext","Card","BoardHeader","Context","Board","id","className","cards","type","canBeAdded","boardName","color","dispatch","drop","e","preventDefault","target","dataTransfer","getData","target_parsed","JSON","parse","isDifferMoreOne","board_type","card_type","is_right_differ","is_wrong_differ","payload","board_old_id","board_id","card_id","board_new_id","card","draggable","title","description","dragOver","map","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,OAAT,KAAwB,eAAxB,CACA,MAAO,uBAAP,CAEA,QAASC,CAAAA,KAAT,MAA6E,IAA5DC,CAAAA,EAA4D,MAA5DA,EAA4D,CAAxDC,SAAwD,MAAxDA,SAAwD,CAA7CC,KAA6C,MAA7CA,KAA6C,CAAtCC,IAAsC,MAAtCA,IAAsC,CAAhCC,UAAgC,MAAhCA,UAAgC,CAApBC,SAAoB,MAApBA,SAAoB,CAATC,KAAS,MAATA,KAAS,iBACtDX,UAAU,CAACG,OAAD,CAD4C,CACnES,QADmE,aACnEA,QADmE,CAG3E,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,CAAD,CAAO,CAClBA,CAAC,CAACC,cAAF,GAEA,GAAMC,CAAAA,MAAM,CAAGF,CAAC,CAACG,YAAF,CAAeC,OAAf,CAAuB,QAAvB,CAAf,CACA,GAAMC,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAL,CAAWL,MAAX,CAAtB,CAEA,GAAI,CAACG,aAAL,CAAoB,OAEpB,QAASG,CAAAA,eAAT,CAAyBC,UAAzB,CAAqCC,SAArC,CAAgD,CAC9C,GAAMC,CAAAA,eAAe,CAAG,IAAxB,CACA,GAAMC,CAAAA,eAAe,CAAG,KAAxB,CAEA,GAAIH,UAAU,CAAGC,SAAb,GAA2B,CAA3B,EAAgCD,UAAU,CAAGC,SAAb,GAA2B,CAAC,CAAhE,CACE,MAAOC,CAAAA,eAAP,CAEF,MAAOC,CAAAA,eAAP,CACD,CAED,GACElB,IAAI,GAAKW,aAAa,CAACX,IAAvB,EACAc,eAAe,CAACd,IAAD,CAAOW,aAAa,CAACX,IAArB,CAFjB,CAGE,CACAI,QAAQ,CAAC,CACPJ,IAAI,CAAE,cADC,CAEPmB,OAAO,CAAE,CACPC,YAAY,CAAET,aAAa,CAACU,QADrB,CAEPC,OAAO,CAAEX,aAAa,CAACd,EAFhB,CAGPmB,SAAS,CAAEhB,IAHJ,CAIPuB,YAAY,CAAE1B,EAJP,CAKP2B,IAAI,CAAE,CACJ3B,EAAE,CAAEc,aAAa,CAACd,EADd,CAEJC,SAAS,CAAE,MAFP,CAGJ2B,SAAS,CAAE,MAHP,CAIJzB,IAAI,CAAEA,IAJF,CAKJ0B,KAAK,CAAEf,aAAa,CAACe,KALjB,CAMJC,WAAW,CAAEhB,aAAa,CAACgB,WANvB,CALC,CAFF,CAAD,CAAR,CAiBD,CACF,CAxCD,CA0CA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACtB,CAAD,CAAO,CACtBA,CAAC,CAACC,cAAF,GACD,CAFD,CAIA,mBACE,2BAAK,EAAE,CAAC,OAAR,CAAgB,SAAS,CAAC,cAA1B,eACE,oBAAC,WAAD,EACE,UAAU,CAAEN,UADd,CAEE,SAAS,CAAEC,SAFb,CAGE,OAAO,CAAEL,EAHX,CAIE,IAAI,CAAEG,IAJR,CAKE,OAAO,CAAEG,KALX,EADF,cAQE,2BAAK,EAAE,CAAEN,EAAT,CAAa,SAAS,CAAEC,SAAxB,CAAmC,MAAM,CAAEO,IAA3C,CAAiD,UAAU,CAAEuB,QAA7D,EACG7B,KAAK,EAAIA,KAAK,CAAC8B,GAAN,CAAU,SAACC,IAAD,qBAChB,oBAAC,IAAD,gBAAM,GAAG,CAAEA,IAAI,CAACjC,EAAhB,EAAwBiC,IAAxB,EAA8B,OAAO,CAAEjC,EAAvC,CAA2C,UAAU,CAAEK,SAAvD,GADgB,EAAV,CADZ,CARF,CADF,CAgBD,CAED,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Card from \"../CardModule/Card\";\nimport BoardHeader from \"./BoardHeader\";\nimport { Context } from \"../../context\";\nimport \"../../styles/Main.css\";\n\nfunction Board({ id, className, cards, type, canBeAdded, boardName, color }) {\n  const { dispatch } = useContext(Context);\n\n  const drop = (e) => {\n    e.preventDefault();\n\n    const target = e.dataTransfer.getData(\"cardId\");\n    const target_parsed = JSON.parse(target);\n\n    if (!target_parsed) return;\n\n    function isDifferMoreOne(board_type, card_type) {\n      const is_right_differ = true;\n      const is_wrong_differ = false;\n\n      if (board_type - card_type === 1 || board_type - card_type === -1)\n        return is_right_differ;\n\n      return is_wrong_differ;\n    }\n\n    if (\n      type === target_parsed.type ||\n      isDifferMoreOne(type, target_parsed.type)\n    ) {\n      dispatch({\n        type: \"UPDATE_CARDS\",\n        payload: {\n          board_old_id: target_parsed.board_id,\n          card_id: target_parsed.id,\n          card_type: type,\n          board_new_id: id,\n          card: {\n            id: target_parsed.id,\n            className: \"card\",\n            draggable: \"true\",\n            type: type,\n            title: target_parsed.title,\n            description: target_parsed.description,\n          },\n        },\n      });\n    }\n  };\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div id=\"board\" className=\"boardwrapper\">\n      <BoardHeader\n        canBeAdded={canBeAdded}\n        boardName={boardName}\n        boardId={id}\n        type={type}\n        colorBg={color}\n      />\n      <div id={id} className={className} onDrop={drop} onDragOver={dragOver}>\n        {cards && cards.map((item) => (\n            <Card key={item.id} {...item} boardId={id} board_name={boardName} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}