{"ast":null,"code":"export default function (state, action) {\n  switch (action.type) {\n    case \"UPDATE_CARDS\":\n      return state.map(board => {\n        if (board.id === action.payload.board_old_id) {\n          const cardIndex = board.cards.findIndex(card => card.id === action.payload.card_id);\n          board.cards.splice(cardIndex, 1);\n        }\n\n        if (board.id === action.payload.board_new_id) {\n          board.cards.push(action.payload.card);\n        }\n\n        return board;\n      });\n\n    case \"ADD_CARD\":\n      return state.map(board => {\n        if (board.id === action.payload.board_id) {\n          board.cards.push(action.payload.card);\n        }\n\n        return board;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Buny/Desktop/React-dnd-board-with-react-hooks-master/src/reducer.js"],"names":["state","action","type","map","board","id","payload","board_old_id","cardIndex","cards","findIndex","card","card_id","splice","board_new_id","push","board_id"],"mappings":"AAAA,eAAe,UAAUA,KAAV,EAAiBC,MAAjB,EAAyB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAWC,KAAD,IAAW;AAC1B,YAAIA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeC,YAAhC,EAA8C;AAC5C,gBAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAN,CAAYC,SAAZ,CACfC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeM,OADrB,CAAlB;AAIAR,UAAAA,KAAK,CAACK,KAAN,CAAYI,MAAZ,CAAmBL,SAAnB,EAA8B,CAA9B;AACD;;AAED,YAAIJ,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeQ,YAAhC,EAA8C;AAC5CV,UAAAA,KAAK,CAACK,KAAN,CAAYM,IAAZ,CAAiBd,MAAM,CAACK,OAAP,CAAeK,IAAhC;AACD;;AACD,eAAOP,KAAP;AACD,OAbM,CAAP;;AAcF,SAAK,UAAL;AACE,aAAOJ,KAAK,CAACG,GAAN,CAAWC,KAAD,IAAW;AAC1B,YAAIA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeU,QAAhC,EAA0C;AACxCZ,UAAAA,KAAK,CAACK,KAAN,CAAYM,IAAZ,CAAiBd,MAAM,CAACK,OAAP,CAAeK,IAAhC;AACD;;AAED,eAAOP,KAAP;AACD,OANM,CAAP;;AAQF;AACE,aAAOJ,KAAP;AA1BJ;AA4BD","sourcesContent":["export default function (state, action) {\n  switch (action.type) {\n    case \"UPDATE_CARDS\":\n      return state.map((board) => {\n        if (board.id === action.payload.board_old_id) {\n          const cardIndex = board.cards.findIndex(\n            (card) => card.id === action.payload.card_id\n          );\n\n          board.cards.splice(cardIndex, 1);\n        }\n\n        if (board.id === action.payload.board_new_id) {\n          board.cards.push(action.payload.card);\n        }\n        return board;\n      });\n    case \"ADD_CARD\":\n      return state.map((board) => {\n        if (board.id === action.payload.board_id) {\n          board.cards.push(action.payload.card);\n        }\n\n        return board;\n      });\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}