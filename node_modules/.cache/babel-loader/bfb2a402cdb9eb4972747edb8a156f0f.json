{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Buny\\\\Desktop\\\\React-dnd-board-with-react-hooks-master\\\\src\\\\components\\\\BoardModule\\\\Board.js\";\nimport React, { useContext } from \"react\";\nimport Card from \"../CardModule/Card\";\nimport BoardHeader from \"./BoardHeader\";\nimport { Context } from \"../../context\";\nimport \"../../styles/Main.css\";\n\nfunction Board({\n  id,\n  className,\n  cards,\n  type,\n  canBeAdded,\n  boardName,\n  color\n}) {\n  const {\n    dispatch\n  } = useContext(Context);\n\n  const drop = e => {\n    e.preventDefault();\n    const target = e.dataTransfer.getData(\"cardId\");\n    const target_parsed = JSON.parse(target);\n    if (!target_parsed) return;\n\n    function isDifferMoreOne(board_type, card_type) {\n      const is_right_differ = true;\n      const is_wrong_differ = false;\n      if (board_type - card_type === 1 || board_type - card_type === -1) return is_right_differ;\n      return is_wrong_differ;\n    }\n\n    if (type === target_parsed.type || isDifferMoreOne(type, target_parsed.type)) {\n      dispatch({\n        type: \"UPDATE_CARDS\",\n        payload: {\n          board_old_id: target_parsed.board_id,\n          card_id: target_parsed.id,\n          card_type: type,\n          board_new_id: id,\n          card: {\n            id: target_parsed.id,\n            className: \"card\",\n            draggable: \"true\",\n            type: type,\n            title: target_parsed.title,\n            description: target_parsed.description\n          }\n        }\n      });\n    }\n  };\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"board\",\n    className: \"boardwrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BoardHeader, {\n    canBeAdded: canBeAdded,\n    boardName: boardName,\n    boardId: id,\n    type: type,\n    colorBg: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: className,\n    onDrop: drop,\n    onDragOver: dragOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, cards && cards.map(item => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: item.id\n  }, item, {\n    boardId: id,\n    board_name: boardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/Buny/Desktop/React-dnd-board-with-react-hooks-master/src/components/BoardModule/Board.js"],"names":["React","useContext","Card","BoardHeader","Context","Board","id","className","cards","type","canBeAdded","boardName","color","dispatch","drop","e","preventDefault","target","dataTransfer","getData","target_parsed","JSON","parse","isDifferMoreOne","board_type","card_type","is_right_differ","is_wrong_differ","payload","board_old_id","board_id","card_id","board_new_id","card","draggable","title","description","dragOver","map","item"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Card from \"../CardModule/Card\";\nimport BoardHeader from \"./BoardHeader\";\nimport { Context } from \"../../context\";\nimport \"../../styles/Main.css\";\n\nfunction Board({ id, className, cards, type, canBeAdded, boardName, color }) {\n  const { dispatch } = useContext(Context);\n\n  const drop = (e) => {\n    e.preventDefault();\n\n    const target = e.dataTransfer.getData(\"cardId\");\n    const target_parsed = JSON.parse(target);\n\n    if (!target_parsed) return;\n\n    function isDifferMoreOne(board_type, card_type) {\n      const is_right_differ = true;\n      const is_wrong_differ = false;\n\n      if (board_type - card_type === 1 || board_type - card_type === -1)\n        return is_right_differ;\n\n      return is_wrong_differ;\n    }\n\n    if (\n      type === target_parsed.type ||\n      isDifferMoreOne(type, target_parsed.type)\n    ) {\n      dispatch({\n        type: \"UPDATE_CARDS\",\n        payload: {\n          board_old_id: target_parsed.board_id,\n          card_id: target_parsed.id,\n          card_type: type,\n          board_new_id: id,\n          card: {\n            id: target_parsed.id,\n            className: \"card\",\n            draggable: \"true\",\n            type: type,\n            title: target_parsed.title,\n            description: target_parsed.description,\n          },\n        },\n      });\n    }\n  };\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div id=\"board\" className=\"boardwrapper\">\n      <BoardHeader\n        canBeAdded={canBeAdded}\n        boardName={boardName}\n        boardId={id}\n        type={type}\n        colorBg={color}\n      />\n      <div id={id} className={className} onDrop={drop} onDragOver={dragOver}>\n        {cards && cards.map((item) => (\n            <Card key={item.id} {...item} boardId={id} board_name={boardName} />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}