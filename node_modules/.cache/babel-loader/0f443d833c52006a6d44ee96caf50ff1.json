{"ast":null,"code":"export default function (state, action) {\n  switch (action.type) {\n    case 'UPDATE_CARDS':\n      return state.map(board => {\n        if (board.id === action.payload.board_old_id) {\n          const cardIndex = board.cards.findIndex(card => card.id === action.payload.card_id);\n          board.cards.splice(cardIndex, 1);\n        }\n\n        if (board.id === action.payload.board_new_id) {\n          board.cards.push(action.payload.card);\n        }\n\n        return board;\n      });\n\n    case 'ADD_CARD':\n      return state.map(board => {\n        if (board.id === action.payload.board_id) {\n          board.cards.push(action.payload.card);\n        }\n\n        return board;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Buny/Desktop/React-dnd-board-with-react-hooks-master/src/reducer.js"],"names":["state","action","type","map","board","id","payload","board_old_id","cardIndex","cards","findIndex","card","card_id","splice","board_new_id","push","board_id"],"mappings":"AAAA,eAAe,UAASA,KAAT,EAAgBC,MAAhB,EAAwB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOF,KAAK,CAACG,GAAN,CAAUC,KAAK,IAAI;AAEtB,YAAIA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeC,YAAhC,EAA8C;AAC1C,gBAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAN,CAAYC,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeM,OAAzD,CAAlB;AAEAR,UAAAA,KAAK,CAACK,KAAN,CAAYI,MAAZ,CAAmBL,SAAnB,EAA8B,CAA9B;AAEH;;AAED,YAAIJ,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeQ,YAAhC,EAA8C;AAE1CV,UAAAA,KAAK,CAACK,KAAN,CAAYM,IAAZ,CAAiBd,MAAM,CAACK,OAAP,CAAeK,IAAhC;AAEH;;AACD,eAAOP,KAAP;AACH,OAfM,CAAP;;AAgBF,SAAK,UAAL;AACC,aAAOJ,KAAK,CAACG,GAAN,CAAUC,KAAK,IAAI;AAErB,YAAIA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeU,QAAhC,EAA0C;AAEtCZ,UAAAA,KAAK,CAACK,KAAN,CAAYM,IAAZ,CAAiBd,MAAM,CAACK,OAAP,CAAeK,IAAhC;AACH;;AAED,eAAOP,KAAP;AACH,OARK,CAAP;;AAUD;AACE,aAAOJ,KAAP;AA9BJ;AAgCH","sourcesContent":["export default function(state, action) {\n    switch (action.type) {\n      case 'UPDATE_CARDS':\n        return state.map(board => {\n\n            if (board.id === action.payload.board_old_id) {\n                const cardIndex = board.cards.findIndex(card => card.id === action.payload.card_id);\n\n                board.cards.splice(cardIndex, 1);\t\n\n            }\n\n            if (board.id === action.payload.board_new_id) {\n\n                board.cards.push(action.payload.card);\n\n            }\n            return board;\n        });\n      case 'ADD_CARD':\n       return state.map(board => {\n\n            if (board.id === action.payload.board_id) {\n\n                board.cards.push(action.payload.card);\n            }\n            \n            return board;\n        });\n\n      default:\n        return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}